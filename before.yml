# Defined tags: network, upgrade-kernel
---
- name: Check ansible version
  import_playbook: ansible_version.yml

- name: Ensure compatibility with old groups
  import_playbook: legacy_groups.yml

- hosts: bastion[0]
  gather_facts: False
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults }
    - { role: bastion-ssh-config, tags: ["localhost", "bastion"] }

- name: Gather facts
  tags: always
  import_playbook: facts.yml

# Bootstrap OS
# NTP
- name: Sync with NTP
  hosts: k8s_cluster
  gather_facts: False
  tasks:
    - command: which chronyd
      register: chronyd
      ignore_errors: true
    - command: grep '^server ntp\.aliyun\.com iburst' /etc/chrony.conf
      register: chrony_conf
      ignore_errors: true
    - name: Add NTP
      lineinfile:
        dest: /etc/chrony.conf
        line: server ntp.aliyun.com iburst
      when: chronyd.rc == 0 and 'server ntp.aliyun.com iburst' not in chrony_conf.stdout
    - shell: |
        systemctl stop chronyd
        iptables -A OUTPUT -p udp -m udp -m multiport --dports 123 -m state --state NEW -j ACCEPT
        iptables -A INPUT -m state --state NEW -p udp --dport 123 -j ACCEPT
        chronyd -q 'server ntp.aliyun.com iburst'
        systemctl start chronyd
        systemctl enable chronyd
  tags:
    - never
    - enable-chronyd

- name: OS Network
  hosts: k8s_cluster
  gather_facts: False
  tasks:
    # Increase MTU for better performance
    - name: Change MTU to 9000 
      shell: ip link set dev eth0 mtu 9000
    - name: modprobe sch_netem
      shell: |
        modprobe sch_netem
        lsmod | grep sch_netem
      register: sch_netem
    - debug: var=sch_netem.stdout
  tags:
    - never
    - network

- name: Turn off hugepage
  hosts: k8s_cluster
  gather_facts: False
  tasks:
    - name: turn off THP
      shell: |
        echo never > /sys/kernel/mm/transparent_hugepage/defrag
        echo never > /sys/kernel/mm/transparent_hugepage/enabled
        echo 'echo never > /sys/kernel/mm/transparent_hugepage/defrag' >> /etc/rc.d/rc.local
        echo 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' >> /etc/rc.d/rc.local
  tags:
    - never
    - turn-off-hugepage

- name: Install nfs-utils, CI depends on it
  hosts: k8s_cluster
  gather_facts: False
  tasks:
    - name: install nfs-utils
      dnf:
        name: nfs-utils
        state: present
  tags:
    - nfs-utils

- name: install telegraf
  import_playbook: install_telegraf.yml
  tags:
    - telegraf

# Upgrade Kernel
- name: Upgrade Kernel ml
  hosts: k8s_cluster
  gather_facts: False
  tasks:
    - name: Update ELRepo Repository
      shell: |
        dnf update -y
        dnf install -y https://www.elrepo.org/elrepo-release-8.el8.elrepo.noarch.rpm
        rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
        dnf makecache
      when: ansible_kernel | version('5.10','<')
    - name: Set yum.repos.d baseurl
      shell: |
        sed -e 's|baseurl=http://elrepo.org/linux/kernel/el8/$basearch/|baseurl=http://mirrors.neusoft.edu.cn/elrepo/kernel/el8/x86_64/|g' -e 's|mirrorlist=http://mirrors.elrepo.org/mirrors-elrepo-kernel.el8|#mirrorlist=http://mirrors.elrepo.org/mirrors-elrepo-kernel.el8|g' -i.bak /etc/yum.repos.d/elrepo.repo
    - name: Upgrade Kernel
      shell: |
        dnf --enablerepo="elrepo-kernel" install -y kernel-ml
      when: ansible_kernel | version('5.10','<')
    - name: Reboot the machine
      reboot:
        reboot_timeout: 300
      when: ansible_kernel | version('5.10','<')
    - name: Confirm kernel version
      shell: uname -a
      register: kernel_version
    - debug: var=kernel_version.stdout
    - name: Install kernel-modules-extra since chaos-mesh depends it
      dnf:
        name: kernel-ml-modules-extra.x86_64
        state: present
  tags:
    - never
    - upgrade-kernel-ml
